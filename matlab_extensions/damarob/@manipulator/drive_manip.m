function drive_manip(manip)
% DRIVE_MANIP gives you the possibility to manually drive the manipulator.
%  syntax:
%        manipulator.drive_manip   or   drive_manip(manipulator)
%
%     See also manipulator
%              manipulator/show_manip
%              manipulator/Direct_Kinematics
%
% Copyright (C) 2009, by Carmine Dario Bellicoso and Marco Caputano.
% This file is part of GNU LGPLv2.1 DAMA^{ROB}
%    http://www.damarob.altervista.org
%

%     DAMA^{ROB}: a symbolic robotics toolbox for matlab(tm)
%     Copyright (C) 2009, by Carmine Dario Bellicoso and Marco Caputano.
%       http://www.damarob.altervista.org
%       damarobotics@gmail.com
% 
%     This library is free software; you can redistribute it and/or
%     modify it under the terms of the GNU Lesser General Public
%     License as published by the Free Software Foundation; either
%     version 2.1 of the License, or (at your option) any later version.
% 
%     This library is distributed in the hope that it will be useful,
%     but WITHOUT ANY WARRANTY; without even the implied warranty of
%     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%     Lesser General Public License for more details.
% 
%     You should have received a copy of the GNU Lesser General Public
%     License along with this library; if not, write to the Free Software
%     Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

if manip.DH.r==0 && isfield(manip.DH,'table')
    disp(' Unable to drive or show a manipulator without joints');    
    return    
end
if manip.is_sym == 0
    manip.jointpos = manip.jointpos;                  % open 3D window
    objname = inputname(1);                           % object name
    q_min = double(manip.DH.table(:,6));              % limits
    q_max = double(manip.DH.table(:,7));
    r = manip.DH.r;                                   % number of joints

    for i = 1:1:r                                     % check finite value limits
        if q_min(i) == -Inf
            if manip.DH.table(i,5) == 0
                q_min(i) = -4;
            else
                q_min(i) = -1;
            end
        end
        if q_max(i) == Inf
            if manip.DH.table(i,5) == 0
                q_max(i) = 4;
            else
                q_max(i) = 1;
            end
        end
    end

    % manual drive Main Window
    manmov.mainfig = dialog('Position',[358 402 630 60+20*r], 'Name', ['DAMAROB manipulator : ', manip.name], ...
        'WindowStyle', 'normal', ...
        'CloseRequestFcn', ['try; close(',objname,'.vr_base); end; closereq'] );

    % subtitle
    uicontrol('Parent',manmov.mainfig, 'Position',[270 40+20*r 320 20], 'HorizontalAlignment','center', ...
        'String','Manual Drive: Joint Positions', 'Style','text','FontSize',11);

    % show axes button
    manmov.togglebutton = uicontrol('Parent',manmov.mainfig, ...
        'Position',[10 5 90 20], ...
        'HorizontalAlignment','center', ...
        'String','show axes', ...
        'Style','togglebutton', ...
        'Value',1, ...
        'Callback',['toggled = get(',objname,'.fig.manmov.togglebutton,''Value''); ',objname,'.show_manip(toggled); clear toggled;'], ...
        'FontSize',10);

    % home button
    manmov.homebutton = uicontrol('Parent',manmov.mainfig, ...
        'Position',[110 5 50 20], ...
        'HorizontalAlignment','center', ...
        'String','home', ...
        'Style','pushbutton', ...
        'Value',1, ...
        'Callback', ['for i=1:1:',objname,'.DH.r set(',objname,'.fig.manmov.val{i},''String'',''0'');','eval(get(',objname,'.fig.manmov.val{i},''callback'')); end; clear i;'] , ...
        'FontSize',10);


    % End Effector position
    uicontrol('Parent',manmov.mainfig,...
        'Position',[285 5 120 20], ...
        'HorizontalAlignment','left', ...
        'String','End Effector XYZ:',...
        'Style','text',...
        'FontSize',11);

    manmov.x = uicontrol('Parent',manmov.mainfig, ...
        'Style','edit', 'Position',[405 5 60 20], ...
        'String',num2str( manip.func.x(manip.jointpos),2 ),'Enable','off');
    manmov.y = uicontrol('Parent',manmov.mainfig, ...
        'Style','edit', 'Position',[470 5 60 20], ...
        'String',num2str( manip.func.y(manip.jointpos),3 ),'Enable','off');
    manmov.z = uicontrol('Parent',manmov.mainfig, ...
        'Style','edit', 'Position',[535 5 60 20], ...
        'String',num2str( manip.func.z(manip.jointpos),3 ),'Enable','off');

    % sliders
    for i = 1:1:r
        uicontrol('Parent',manmov.mainfig, ...
            'Position',[10 35+20*(r-i) 30 20],...
            'HorizontalAlignment','left', ...
            'String',['q',num2str(i)], 'Style','text');

        manmov.min{i} = uicontrol('Parent',manmov.mainfig,...
            'Style','edit', 'Position',[40 35+20*(r-i) 60 20],...
            'String',char(manip.DH.table(i,6)),'Enable','off');
        manmov.val{i} = uicontrol('Parent',manmov.mainfig,...
            'Style','edit',...
            'Position',[105 35+20*(r-i) 60 20]);
        manmov.max{i} = uicontrol('Parent',manmov.mainfig,...
            'Style','edit',...
            'Position',[170 35+20*(r-i) 60 20],...
            'String',char(manip.DH.table(i,7)),...
            'Enable','off');
        manmov.slid{i} = uicontrol('Parent',manmov.mainfig,...
            'Style','slider',...
            'Position',[244 35+20*(r-i) 352 20], ...
            'Min', q_min(i) ,...
            'Max', q_max(i), ...
            'Callback', ...
            ['rot = get(',objname,'.fig.manmov.slid{',num2str(i),'},''Value'');'...
            ' ',objname,'.jointpos(',num2str(i),') = rot;'...
            ' set(',objname,'.fig.manmov.val{',num2str(i),'},''String'',num2str(rot));'...
            ' clear rot;'...
            ' set(',objname,'.fig.manmov.x,''String'', eval(num2str(',objname,'.func.x(',objname,'.jointpos),3)));',...
            ' set(',objname,'.fig.manmov.y,''String'', eval(num2str(',objname,'.func.y(',objname,'.jointpos),3)));',...
            ' set(',objname,'.fig.manmov.z,''String'', eval(num2str(',objname,'.func.z(',objname,'.jointpos),3)));'],...
            'SliderStep',[i/(100*pi), i/(50*pi)]);

        manip.fig.manmov = manmov;
        set(manip.fig.manmov.val{i},'Callback',...
            ['set(',objname,'.fig.manmov.slid{',num2str(i),'},''Value'',str2num(get(',objname,'.fig.manmov.val{',num2str(i),'},''String'')));',...
            'eval(get(',objname,'.fig.manmov.slid{',num2str(i),'},''Callback''));']);
        set(manip.fig.manmov.slid{i},'Value',manip.jointpos(i));
        set(manip.fig.manmov.val{i},'String',num2str(manip.jointpos(i)));
    end

    assignin('caller',inputname(1),manip);
else
    disp(' Unable to drive or show a symbolic manipulator');    
end
end